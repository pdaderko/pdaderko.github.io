<?xml version="1.0" encoding="UTF-8" ?>
<site>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/</url>
		<content>Project: Virtual Boy Project: Virtual Boy &amp;nbsp; &amp;nbsp; &amp;nbsp;Virtual Boy Lives @ Project: VB Long overdue site redesign, plus some cool new projects coming 08/23/2008 | DogP Here's the new site design... I'm still in the process of getting all the pages back up, but I'll get that finished shortly, followed by a new update in content. Site back up on new webspace, plus lots of updates 07/17/2006 | DogP WOW! Sorry about the HUGE delay in this update, and sorry about the site downtime. I promise I've still been VB'ing, just been too busy to update, and I've switched ISPs, so that's what caused the downtime :-(. Thanks to Ferry from www.virtual-boy.org for the webspace. Anyway, for those that care, I've been busy with work and school mostly, I got my AS in Computer Science back in Dec. 03 from NVCC, and for the last two years I've been going to George Mason University for a BS in Electrical Engineering. I can't wait to get done with school, I've got one more semester :-). I've also been collecting arcade games and pinball machines... right now I've got over 40 coin-op machines, with (lack of) space being my worst enemy &amp;gt;_&amp;lt;. Now for the updates... I'll try to remember everything ;-). First, I've added a new section on fixing the glitchy display problems. This has become a MAJOR problem recently (and Nintendo has stopped repairing VBs :-( ), and after explaining how to fix it to lots of people, I figured I'd put up a tutorial on it (and also some stuff on modifying a security bit to work in the deep holes). I also got my hands on an official Nintendo VB EPROM cartridge, so I added pics and some info on that to the Reprogrammable Cart section. I've also made a reprogrammable cart PCB, which I've also added into the Reprogrammable Cart section. Sorry, they're not for sale yet... but I should have a few for sale eventually. I've been working on a progam to flash the cart from the VB (sending the data over the link port), that way you don't need an EPROM programmer, but it's still in the works (it works, but isn't complete yet). Oh yeah... the last unknown pin on the cart edge (pin 5) is a /WE!!! I also picked up a USB Virtual Boy controller kit from www.retrousb.com and it works great, so I put a page on that up in the controller section. Oh, and I reorganized a lot of my site (the behind the scenes stuff), so let me know if you find any broken links. Coming soon (this is more of a reminder for myself than trying to get you excited about the next update ;-) ): I've successfully built a link cable to go from the VB link port-&amp;gt;PC parallel port. So far I've done some simple speed tests and made a cart dumping program (with a CRC32 check to ensure a good dump). Thanks to Frostgiant (are you still out there???) for the help on the dumping program. I've also overclocked a VB... it works, and it is faster, but because the mirrors are dependent on the timing of the rest of the system, the display is messed up (the system runs stable to 28MHz, at 33MHz the system gets glitchy, and at 40MHz, it won't start). Speeding the mirrors up proportionally should help the display problem. I've also been doing a lot of VB programming, mostly just hardware tests and demos, but I've also been working on a Mario game, which I'll get some pics and maybe a ROM of up of soon. I've also gotten some more game endings (V-Tetris, NFB, Insmouse, Golf, Mario Clash), some of which I think I already added, but I'll have to make sure. I'll get all of that information and code up hopefully in the next update (it's been so long, I have no idea where that stuff is anymore). Obviously you've found my new web address (or it's still being redirected from http://projectvb.vze.com), but if you find any broken links, please let me know. Of course since you're reading this the page is up, but I'm still in the process of uploading all of the new content so it may be a short while before all of the promised updates are available. Also, for those who haven't noticed, my email has changed too... it's virtual .dot. boy @at@ comcast .dot. net. Controllers and other random stuff 06/09/2003 |&amp;nbsp;DogP Finally, another update! VB work has been a little slow lately because of finals and that kinda stuff... but now it's summer, so here's some of the projects I've been working on. First, I've made a new controller section for a few controller modifications and related stuff... I've got a lot more controller related stuff than I put up, but it's not really the top on my priorities to finish. In the controller section right now is the start of a how-to for an adapter to use NES/SNES controllers on the VB, and a VB controller with two outputs so you can control multiple VB's with one controller. I also added a how-to for a rechargable VB battery pack. And thanks to Parasyte for pointing out an article with a cheat to access a debug menu in Red Alarm, and for finding two more cheats in Jack Bros... those are in the cheats section. I also added a pic of a new "tool" for making cartridges in the reprogrammable cart sections. Lastly, I uploaded the ending description/pics for Virtual Fishing. Homebrew stuff released, plus more pinout info 04/19/2003 | DogP Ugh... I STILL haven't gotten the projects I've been wanting to get up... but I did add two more pins to the cart pinout, leaving only pin 5 to figure out. Also, thanks to RedAlarm for sending me a scan of an article from GMR which does a short overview of the Virtual Boy, although it's a really crappy article, it's interesting to see :-P. And lastly, finally I'm releasing the ROMs / source to my apps / games that I've programmed for the VB, so those check out HERE. VUE-Debugger 03/08/2003 | DogP This is a quick update with some pics and info on the VUE-Debugger that I'm borrowing from a friend. Check it out under the Virtual Boy Development section. I'll get more info up later when I get it working, and I've got some more projects I'd like to get up, but I'm going out of town for Spring Break next week :-), so it'll be a couple weeks until the next update. VB systems talk over the Link Cable 02/19/2003 | DogP Here's an update that I've been trying to get up for the last few weeks, but just haven't gotten around to it... I've gotten 2 VB's actually communicating over the link cable, so I put up a link cable diagram as I think it should be. I also put up an updated cartridge pinout. Also, Tonight I made another flash cart, so I put up a few pics of that one. There were a few other things I was trying to get put up, but I guess they'll have to wait until the next update. And for those of you that were having problems with the old java menu, I made a temporary html one until I get a better one. Reading SRAM, plus game endings 01/16/2003 | DogP Happy New Year everyone! The biggest part of this update is my new how-to on reading / writing the SRAM with a Game Boy SRAM read/writer, which is under the reprogrammable cart section. I also added some new game endings, including Virtual Lab and SD Gundam. Merry Christmas! &amp;nbsp;More Prototype pics/info! 12/25/2002 | DogP Merry Christmas everyone! I added a little more info / the rest of the pics I have right now of the protos, and made their own pages for each. Also, for mac owners, ViBE 1.0b2 has been released! Now I'm just hoping for a PC version *hint hint* :-) Flash Cart info, plus Tech Specs 12/18/2002 | DogP Here's the follow-up that I promised... basically, I just added the info on the flash cart, a little more info on the technical specs of the VB, and updated the VB ROM list. I'll try to get more pics / info up on the protos soon, but I've got to study for my calc final for tomorrow :-(, but then I'm off for a month! Prototypes Surfaced! &amp;nbsp;Faceball and Virtual Bowling! 12/18/2002 | DogP Well, MANY thanks go out to the mysterious VB collector "Mr. G"! for sending me pictures and information on the only known prototypes, Faceball and Virtual Bowling!!! I am still working on completing the rest of my update, but for the time being, you can view the pics / info of the protos here! I have been in contact with him and am trying to get more pics / information on them, so expect more to come soon, along with information on my flash reprogrammable cartridge and a few other things I've been working on over the past few months. Find me at projectvb.vze.com, plus other stuff 11/17/2002 | DogP This is mostly just a follow-up update, there are still some parts that aren't completed, but I just needed to put up what I had. First, you can access my page from an easier to remember address... it is http://projectvb.vze.com . Now for the update, I added information on the painting of the Virtual Boy, I added some technical information, added a picture of 2 VB's linked together (still in process of figuring out the link port), and I scanned in pics of some VB merchandise (Virtual T-Shirt... is it really there? or should it be Virtual Boy T-Shirt :-) ) from a Super Power Club (Nintendo Power subscribers) pamphlet... thanks to Neil Schuldenfrei for pointing that out. Lots of new VB Development stuff 10/25/2002 | DogP Well, after WAY too long of no updates, I hope you all enjoy this one. I have done a lot of work lately on the development of the Virtual Boy. In my update, I added a few new sections including a how-to for a cart dumper, a reprogrammable EPROM cart, I started an emulation/programming page which will be updated in my next update (soon), I added a section on painting my VB which will also be updated next time, and I did a short how-to on modifying your link port to use a standard RJ45 jack. BTW, the how-to's aren't finished yet, I just put them up so you all could see it. I will complete the how-to's in my next update. I also cleaned up my links section a little. And some more game endings 06/13/2002 | DogP I updated my game endings section with the pictures I took a while back... I'll be continuing to work on it, but that is probably going to be the most progress on it in one update for a while. Other than that, we changed the server where the Virtual Boy Chat room is located. More game endings 05/15/2002 | DogP I have updated my game endings section with a few more games, thanks to Ferry for letting me rip his game endings. I still have some more to go, and I have personally been going through some of the games to get pictures of the endings, which will be up on my next update. New name, same great taste 04/26/2002 | DogP I have changed the name of my site from "Pat's Virtual Boy Page" to Project: Virtual Boy (Project: VB). I have also added a new section for game endings. The game endings is still under construction, but I hope to continue to work towards getting a fairly complete game endings page. ViBE released 04/04/2002 | DogP 4/4/02 - I have added to the menu a link to the new Virtual Boy chat room. Also, big news for mac owners - ViBE, the macintosh Virtual Boy emulator has been released to the public. I personally have tried it out, and it works very well. It can be downloaded at Here. Store Displays 03/23/2002 | DogP 3/23/02 - Finally, another real update. I added a new section to my site with pictures and descriptions of my two store display units. Webspace Changes, I'm back! 02/25/2002 | DogP Finally got my webspace back... I'm glad you found it. Anyway, no change in content, just put it all back up to the new server since my previous internet provider went bankrupt, so it should be here for a while. Also my email address has changed to virtual.boy@mchsi.com . Please tell me if there are any broken links, pages that will not show, or still have a link to my old email address. I tried to fix them all, but may have forgotten a few. New Menu 07/04/2001 | DogP This is a very small update... Pretty much all that has changed is the new java menu bar on the side. Please email me if you have problems viewing the new bar, or is extremely slow. I plan on adding more of these nice looking java bars if they seem compatible with everybody's internet browsers. New update page, and some minor updates 06/21/2001 | DogP The first update is this long needed update page. While I was working on it, I decided to make a few minor cosmetic changes. I also added some new things to the cheats section (Nester's Funky Bowling and Mario Clash). Virtual Boy Tech Repair Dissecting the Virtual Boy Fixing Glitchy Displays Development Virtual Boy Technical Info Programming / Emulation Reprogrammable Cart Cartridge Dumper VUE-Debugger Virtual Boy Modifications Useful Mods TV/VGA Output Link Cable Rechargable Battery Pack Controller Modifications Fun Mods Rumble Pack Painting the VB Other Virtual Boy Stuff Virtual Boy Prototypes Faceball Virtual Bowling Article Scans Nintendo Power Others Store Displays Medium US Display Small US Display Small JP Display Misc Cheats Game Endings Stuff I want for the VB Cool VB Stuff Links Contact Virtual Boy Chat Email Me Search Project: VB</content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/programming.html</url>
		<content>Programming / Emulation Programming and other software development -&amp;nbsp;HereEmulation and ROM information - Here </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/dissect.html</url>
		<content>Dissecting the Virtual Boy The first thing you want to do is flip the Virtual Boy over and locate the 12 screws. The next thing you want to do is remove the visor. Then you have to remove the screws, which can be done by having the right screwdriver or making one (I made one). To make one, take a flat head screwdriver and use a dremel tool to notch out a piece of the screwdriver so it grabs the notches in the screw. Here's a closeup of the head. You can also modify a security bit like shown HERE. The first thing to remove is the bottom plate that attaches to the stand. Then remove the bottom half. Then spin it around and remove the eye pieces. Then remove the side speakers and unscrew the boards attached. Then lift the insides out of the red plastic top. Then you have the center module of the Virtual Boy which has nothing that can be really taken apart. Now that you have ripped your Virtual Boy apart, there is not much you can do with it.&amp;nbsp; You will need to pull it apart to repair the system, or to hook up the Rumble Pack or other mods, but other that that, there is not much that can be done.&amp;nbsp; I have a few ideas, like hook up an audio input so you can listen to an audio CD through the integrated speakers (which I love) while playing the game, or some cool LEDs that show it is in use :-), but neither are very useful. After you put it back together, you might want to put in standard phillips screws to make it easier to put together and so you can open it again if you want, and make sure you check the alignment by inserting a game and pressing Left, B, Down, A, Up on the right D-Pad. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/displayfix.html</url>
		<content>Fixing Glitchy Displays Below are two pictures of what you may encounter with LED ribbon cable problems. There are other problems that could be caused by bad connections (blank screen, solid red screen, etc), but these are the most common. Constant horizontal lines across the display Partial horizontal lines and random noise To fix, first you're going to need to open up your Virtual Boy system. Click HERE for instructions how. You don't need to completely disassemble, just enough to get to the LED bar displays. Once apart, follow these instructions: This is what you need to get to. Unscrew the two small phillips screws holding the LED PCB to the plastic case (DON'T unscrew the star screws or you may mess up the alignment). Pull the cable straight out of the socket on the motherboard. This is what it will look like after removed. Here is the display removed. Take one or both displays and lay them on a piece of aluminum foil or baking pan with the clear plastic cover and cable pointing up. Preheat the oven to 180-200 degrees F. Once the oven is preheated, put the displays in until the cables soften up (wait until the cables lay pretty much flat). There's no need to cook them excessively long (you don't want to melt anything), a couple minutes should be plenty of time. Immediately after removing the displays from the oven, flip them over and rub the back of the cables to the PCB to ensure a good bond. After making sure the cable is connected to the PCB well, I suggest reinforcing the cable with a piece of tape. I cut thin strips of clear packing tape as it resists stretching and the adhesive is good, but other tapes probably work as well. Then wrap the tape around the display. Be sure to tape it as shown so the tape can't come loose since it will be screwed up against the plastic housing. And then of course reinstall the display reverse of the removal. A little history about this problem. I don't believe this problem is necessarily related to abuse. The cables are very light and nothing is loose enough that would get knocked free if subjected to shock (I'm not saying it's okay to beat up the system... there are other parts that won't take the abuse). I saw this problem with my personal system (which I take very good care of) several years ago and decided to attempt to fix it. I tried several methods, but this one I've found to work best. Another interesting fact... I had a BRAND NEW Virtual Boy system a while ago... BOTH displays had problems related to the cables. I believe the problem is actually caused more by the IPD adjustment than anything. The brand new system had the IPD adjustment turned in, which caused the display cables to be pushed outward, detaching it from the rubber glue and of course causing glitchy displays (see pic below). So, it may be a good idea to turn your IPD outward if you plan on storing it for a while. Note: The rubber glue isn't important to the proper function of the display, it's merely a reinforcement. Notice the rubber is seperated from the cable. Compared to another display where the rubber is still attached. After you put it back together, you might want to put in standard phillips screws to make it easier to put together and so you can open it again if you want, and you should check the alignment by inserting a game and pressing Left, B, Down, A, Up on the right D-Pad. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/techinfo.html</url>
		<content>Virtual Boy Technical Info How to erase a cart's SRAM - Here Transplanting Virtual Boy ROMs - Here List of Manufacturers IDs on ROMs - Here Virtual Boy Cartridge Pinout - Here &amp;nbsp; Technical Specs CPU : 32-Bit NEC v810 RISC CPU running at 20 Mhz DISPLAY : 384 x 224 with 4 shades of red and 32 levels of intensity SOUND : 16 Bit Digital Stereo Sound WEIGHT : ~5 lbs. CARTS : 4, 8, and 16 MBit carts were used </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/progcart.html</url>
		<content>Reprogrammable Cart EPROM Cartridge - Here Flash Cartridge - Here PLCC Cart PCB - Here Official Nintendo EPROM cartridge - Here Cart SRAM Reading / Writing - Here SRAM Dumps - Here </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/dumper.html</url>
		<content>Cartridge Dumper Cart dumper made out of an EPROM programmer and a BUNCH of wires &amp;nbsp; This is what you will need to make a cart dumper - two 32pin (or more - I have 40 pins because they're easier to find) sockets, a VB Cart Socket (from an actual Virtual Boy system :-( , or a lot of pins w/ some sort of epoxy holding it's shape), and a board to mount it to (not completely necessary, but definately a help) - my board has connection strips across it so there's really 47 sets of 5 holes all connected on each half, those strips make it easier to connect multiple wires to the same pin. Then you need some Cat3 or Cat5 wire (Cat3 is better because it isn't twisted pair, which makes it easier to pull each wire out individually, and it doesn't tangle later when you're trying to solder). All this stuff (minus the VB Connector is available at Radio Shack) Then you also need a EPROM reader - For everything here, I am using an EPROMER5. &amp;nbsp; Before After - if you get 40 pin IC sockets, you should remove the extra 8 pins so it fits in the EPROM reader easier - you can just push them through from the bottom out the top. &amp;nbsp; Then you should solder in the 32 wires to each of the 2 sockets, I used a color order to make it easier to find the wire I'm looking for in the mess &amp;nbsp; Then you must remove the connector from the VB - it could probably be done with a soldering iron and some wick, but I decided that a faster way would be to take a torch and melt the solder at all the pins at once, then just pull the whole thing off. Then solder all the wires onto the connector (can be very tough and frustrating), it works best to tin the wire first, then solder to the pins, and DON'T use too much solder, it can short multiple pins easily because they are so close together. As you can see, I used Cat5 on this part, and look how tangled those wires are! &amp;nbsp; This is the connector after shortening and soldering all the wires to it - I just went in numerical order so it is easier to find the pins you want, and I connected all wires so I wouldn't have to later to access other things such as the save game memory and anything else that could come up. &amp;nbsp; The bottom of the connector - as you can see, those rows all conected together to make it easier to solder more wires to each pin &amp;nbsp; Then you want to look at this file to see which wires to connect to which pins &amp;nbsp; And here's the top of the finished dumper &amp;nbsp; And the bottom... &amp;nbsp; And here it is connected to the EPROM Reader/Writer &amp;nbsp; To dump a game, you have to dump half of the cart at a time, then use a program to combine the even and odd bytes. You need to select the chip that corresponds with the rom size of the game you are dumping. A list of ROM sizes can be found here. You have to remember that you are only dumping half at a time, so a game that is 512k, you only dump 256k at a time. But if you look at that list, the number shown is already half the physical disk size, so if it says 256k, you want to select a 27C020, 512k, select 27C040, and 1024k, select 27C080. Then connect the first side into the reader, and press read. Then after it reads, save the file and read the other half and do the same. Then you have to use a program to merge the two files together. You can also use this to program your chips if you plug your reprogrammable EPROM cart into it, which may not seem too useful because you have to take the chips out to erase (or make something that erases them in the cart), but in the future it could be useful using an electronically eraseable media such as a Flash chip that could be permanently mounted inside the cart to look like a standard game. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/debugger.html</url>
		<content>VUE-Debugger First, I'd like to thank a VERY generous anonymous friend for letting me borrow the development kit. Unfortunately, I was never able to get it working successfully, and I've since returned it. The computer detected it, but the software was never able to recognize it. It looks very complete, so I'm sure it's something that I wasn't doing correctly, or very possibly the lack of the original SCSI card. Well, on with the pics/info! &amp;nbsp; Here's the front of the kit connected together. &amp;nbsp; And the back of it, disconnected from power and the PC. &amp;nbsp; Here's a quick snapshot of the internals of the beast. &amp;nbsp; And another... &amp;nbsp; The connector for the controller and link port, it's the standard connector mold from a normal VB. &amp;nbsp; The back of the system with the display output at the top, the dip switches for the SCSI ID and other stuff, and the SCSI connector ports below that, and of course the power socket and switch on the left. &amp;nbsp; The cart socket on the top of the debugger... my guess is that it's for reading/writing carts. &amp;nbsp; A cart in the cart socket. &amp;nbsp; The bottom of the debugger display... that's the only part that's different on the outside from a regular Virtual Boy, the plastic is a smooth shiny plastic with no text on the bottom, instead of the textured duller plastic with text on the bottom like the released VB has. Also, notice that there is no controller / link ports, you can see right in, just like where the cart slot is. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tvvga.html</url>
		<content>TV/VGA OutputI'll get some more info up here soon, but here's some videos on Youtube to watch in the mean time:TV OutputVGA Output </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/linkcable.html</url>
		<content>Link Cable Setting up the Hardware: I modified my link port by removing the proprietary connector and connecting up a standard RJ45 connector over Cat5 cable. Here's a short how-to for those interested in this mod. The needed pieces - Cat5 wire, RJ45 connector, the controller/link board. &amp;nbsp; Then you want to separate the link from the controller port - I used a Dremel and cut down the middle - I haven't gotten a better way to do this yet, but when you cut the link connector off, you also cut off the only screw hole (the controller side is only a fitting hole, there is no screw there), so the board doesn't fit in quite as snug as it did when it was screwed in. &amp;nbsp; Then you need to get the link port off - I stuck a flathead screwdriver in between the board and the connector, then used a soldering iron and heated the pins while prying with the screwdriver &amp;nbsp; Then you need to strip back the wires, test to make sure there are no shorts in the connector, then solder the wires into the holes where the link connector was &amp;nbsp; Here's a pic of my wires soldered in the holes, I put them in standard network cable order to remember easier later (W/O,O,W/G,Bl,W/Bl,G,W/Br,Br) &amp;nbsp; Just a pic from the bottom &amp;nbsp; Putting the wires into the socket &amp;nbsp; Completed cable end &amp;nbsp; And here's 2 VB's connected! &amp;nbsp; Pinout: Here's how the VB's should be connected for the link port to work. I have tried all the VB games that have been rumored to have link cable support, and unfortunately none of them do (at least with my pinout that I've found from homebrewn software that successfully communicates across the link port). Looking at the socket on the VB, here's the pin #'s &amp;nbsp; COMCNT? 1-------1 COMCNT?+5 2 2 +5Clock 3-------3 ClockReceive 4-------8 Send??? 5 5 ???Sync? 6-------6 Sync?GND 7-------7 GNDSend 8-------4 Receive Here's the pinout, I'm not 100% sure that this is how it was intended to be used, but as far as I can tell, this is how I think it should be, and it does successfully send and receive data. I'm also not 100% sure of the pin names/functions, but this is what they appear to be, so those are the names I've given them for the time being. &amp;nbsp; Programming: Check my programs out HERE for examples on how to program for the link, and I'll write more specific details here later. When transmitting as the master, the Virtual Boy outputs a 50KHz clock, which outputs data at 50 kbit/second - The test sent 100kbytes (800kbits) of data one byte at a time from a variable and read each byte to a variable in approximately 16 seconds, also did with no reading or writing to variables in approximately the same amount of time, and also switching from master/remote for every send/receive in approximately the same amount of time. Because of the single clock and dedicated Send and Receive pins, it always runs full duplex. When the Virtual Boy is run as a slave and clocked by an external source, the clock can be much faster than 50KHz. &amp;nbsp;I've successfully sent data with no errors at a maximum of about 285KHz.&amp;nbsp;Faster than that, at least with my system and current wiring, will drop bits on occasion. &amp;nbsp;The maximum speed may not be consistent across all systems though. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/rechargepack.html</url>
		<content>Rechargable Battery Pack Here's a how-to for converting a Sega Game Gear rechargable battery pack to the Virtual Boy. It uses the electronics out of the Game Gear pack and they surprisingly fit really well into the normal VB battery case. &amp;nbsp; First, you start with the Game Gear battery pack... I'm assuming pretty much any of them will work, I got mine from ebay, it's the Recoton one with separate packs. &amp;nbsp; Then pull the case apart so you can get to the insides... &amp;nbsp; Then cut the wires so the battery packs are free &amp;nbsp; You'll see that you have a bunch of wires and a socket left in the one side... you can get rid of the other side. &amp;nbsp; You want to cut the wires so you have the socket and resistor assembly. &amp;nbsp; Next, you're going to solder a wire to the connectors on the end of the battery back that connect to the controller, either the back where the actual piece touches, or the battery connector at the end that makes contact with the controller connector. &amp;nbsp; Then you'll want to stick the battery packs together back to back and solder the negative of one to the positive of the other, and leave a positive and negative unconnected. &amp;nbsp; Next, make a notch in the front of the case for the AC adapter socket, then make sure all the wires are pulled up and push the battery packs down into the case. You may need to cut some of the plastic for the battery packs to fit in. &amp;nbsp; Then you need to shave down some of the socket so it will fit nicely into the case when it is finished. &amp;nbsp; Next, you need to place the socket into the case, bend all the wires and the resistor down so the case will close, then connect all the wires to their proper connections. The + from the controller connector goes to the white wire and the + on the battery pack. Refer to the pics for better details, but the one black wire goes to the - on the controller connector, and the other black wire goes to the - on the battery pack. &amp;nbsp; Then you should tape up the wires, and I hot glued mine down. &amp;nbsp; To get the lid on, you're going to need to take all the pieces out of it, then take a dremel and shave off the excess plastic. You also need to make a notch for the AC adapter socket. &amp;nbsp; Then when you're done, you get this! No more worrying about having the AC adapter plug fall out on you, and now it truely can be portable and not waste tons of money on buying batteries. I haven't tested how long this will actually run the VB, but when I do, I'll let you know how long it lasts (FYI, I'd assume it'll last around 3 hours because the VB runs about as long as a Game Gear on 6AA's - 6 hrs., and this pack is supposed to run a Game Gear approximately 3 hrs.). </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/controllers.html</url>
		<content>Controller ModificationsUSB VB controller - Here Dual VB controller - Here NES/SNES to VB controller adapter - Here </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/rumble.html</url>
		<content>Rumble Pack Here is how to hook up a Game Boy Color Rumble&amp;nbsp; Pack by Nyko to the Virtual Boy. You will need: Rumble Pack, Virtual Boy, Soldering Iron, Solder, Drill/Drill Bits, Phillips Screw Driver, About 20 ft. of wire, 1/8" 3-Conductor headphone jack, 1/8" 3-Conductor headphone plug. I recommend you have: Super Glue, Needle Nose Pliers, Sticky foam tape, Multimeter, Electrical Tape, 6"x2"x1" Project Box. (Most of these can be found at Radio Shack) Setting up the Electronics: First you pull the circuit board from the plastic case that it comes in (You will probably have to drill the screws out because they used a trianglular shaped screw head. Then you want to desolder the wires for the speakers (unless you want to use them) Note: You should either be very careful with all the wires (theirs are very cheap and break easily), or desolder all of them and resolder better wires (what I did) Depending on how you plan to mount this, you may have to put longer wires on for the battery.&amp;nbsp; You will have to put longer wires for the motor and the audio cable.&amp;nbsp; I put about 3ft. of cable for the motor, and you should put about 2ft. for the audio cable. Mark which wire is Positive and Negative and desolder the wires for the motor and solder 3ft. wires to the motor and circuit board. Desolder the wires for the power out and audio in (odd shaped plug) Solder the three wires for the audio in to a 1/8"&amp;nbsp; headphone plug, and to the circuit board where you desoldered the audio wires in the previous step.&amp;nbsp; (Put the plastic cover for the plug on the wire before soldering.) Find a suitable place in the controller to mount the motor and drill a hole to run the wire through.&amp;nbsp; (I put mine in the AC Adaptor) (Mount the motor in the foam tape and make sure it is tight in the controller so it doesn't rattle). If you plan to use the project box then do the following steps: Cut out the screw holes from two opposite corners so the board and battery pack will fit in. Drill holes in the sides of the box that line up with the jacks, switches, and adjustment wheel on the board. Drill a hole in the top lined up with the light so you can tell when it is on. Take the foam tape and put it on the bottom of the board and battery pack and stick them into the plastic box lining up with the holes. Cut out a notch for the two sets of wires (motor and audio in wires) in the box. Put the lid on and put the two screws in the corners. If you made it the same as mine, it should look like this completed Setting up the Virtual Boy You must first pull the Virtual Boy apart enough so you can get to the speakers (see instructions on other page). (Basically what you will be doing is adding another headphone jack, but this one won't turn off the speakers). Then drill a hole in the bottom of the VB for the 1/8" headphone jack to screw into and put it in (make sure it won't interfere with the insides of the VB). Solder a wire to the positive and negative of each speaker (4 wires total) (make sure they are long enough to reach the jack) (negative is the striped cable - I think) Connect the 2 negative wires together and solder them both to the negative terminal of the headphone jack Solder one of the other wires to one of the positive terminals on the headphone jack, and the other to the other positive. Screw the VB back together and plug the box into the new jack. Plug in the box and turn it on, make sure the switches are set where you want them and try it out. If you don't get vibration, try headphones in the headphone jack on the box.&amp;nbsp; If you don't have sound, you may have to hook up the negative of the battery to the negative of the audio in plug. (not sure why, but that's what I had to do, must have lost connection somewhere).&amp;nbsp; If you do get sound but no vibration, check your connection to your motor from the board. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/painting.html</url>
		<content>Painting the Virtual Boy Painting the Virtual Boy Here's a short how-to for painting your Virtual Boy. It is fairly easy, but it is very time consuming and addictive, so don't say I didn't warn you. &amp;nbsp; First, you should sand the pieces smooth (using a fine sandpaper - I think I used 400 grit) and spray them with a sandable primer. Then lightly sand smooth and spray with primer again a couple times until you have a good base of primer on there (and is really smooth). Of course you don't HAVE to use primer, but it helps the paint stick and will give the paint a smoother look (and be more durable). &amp;nbsp; Then you should decide on the colors you want to go with. To start with I went with an all red VB, with a black knob and slider. so just spray a couple of light even coats of the color of choice as your base color onto your VB. &amp;nbsp; Then after you're done that step, it should look something like this... then you will want to spray a couple of coats of clear over top and lightly sand smooth with very fine sandpaper to give you the nice glossy look, and after a couple of coats of clear, you should paint any trim that you want to paint (do it after a couple of coats of clear because if you get any paint on the clear, you can just lightly sand it off, but if you try sanding your original paint, you will gouge the paint and look bad). &amp;nbsp; This is after a couple of coats of clear, I painted the trim like I wanted, then to finish the whole thing off, just spray a couple more coats of clear sand the next to last one VERY smooth (I used 2000 grit sandpaper) then spray one final coat of clear and you will be done. Unfortunately, I never got this one completely done since I ran out of clear before my last coat, so I went out and bought a different brand of clear, and either the new stuff was cheap or the old stuff was cheap and the new stuff was eating away at it, but for some reason right when I sprayed it on, it started cracking the paint :-( . Of course I was mad that after getting the thing practically completely done it does this, but now I'm doing something different (I didn't really like the all red look anyway). I was going to try to fix it and repaint it the same way, but when the clear cracked, it made a lot of uneven surfaces, and it would have taken a LOT of sanding or completely stripping it back down to the bare plastic (which I didn't feel like doing). So basically the moral of the story... DONT CHANGE BRANDS OF PAINT IN THE MIDDLE OF THE PROJECT!!! &amp;nbsp; So I went and got some Hammered Metal spray paint. The VB was already cracked and rough looking, and the hammered metal just looked like the best way out of this (covers up the imperfections WELL). This is still in progress, so I'll put up some finished pics in the next update. &amp;nbsp; And here's a closeup of the texture. &amp;nbsp; Sanding the Stand I wanted to do something cool with the stand, but I couldn't think of what color would look good to paint it, so I decided that a smooth bare metal would look nice, so sanded all the paint off and made it a smooth bare steel stand. &amp;nbsp; First I took off all the paint with a fairly coarse sandpaper (I believe that I used 220 grit), then went back with a pick to scratch away any paint that was left in any molding grooves (sandpaper doesn't get in the grooves very well). At this point you don't want to make any large gouges, but don't worry about scratching the metal. After getting all the paint off the stand, go over it again with the course sandpaper to make sure to smooth out any large scratches, then go to a finer sandpaper (I used 400 grit) and sanded the stand down more until it had a smooth shine, then the last time over it was with a VERY fine sandpaper (I used 2000 grit). You should go over it with that until there are no noticible scratches on the stand and you are happy with the shine. If you want to really get into this, you can get a metal polish and really shine this up, but that's up to you. &amp;nbsp; Here it is put together. I haven't decided on the color of the support yet, but I like the shine of the stand (the pictures really don't show it very well... looks a lot better in person). </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/proto_faceball.html</url>
		<content>Faceball Here are a bunch of pictures and screenshots of the one of the two first known Prototype carts, Faceball!!! Many thanks go out to the mysterious VB collector "Mr. G"! I got an email from him with many pics of the carts and a few screenshots. Please do not take the Project:VB logo off the pics and use the pics elsewhere, I tried putting the logo in a place that didn't block too much, but if I start seeing them with the logo cropped out, I'll have to put them where it blocks the pictures :-(. Full shot of the back of the Faceball cart &amp;nbsp; Closeup of the chips on the Faceball cart &amp;nbsp; Precaution screen, notice the different font &amp;nbsp; Adjustment screen, This is the only game known that has something besides the VB's in the corners (these are faceballs) and this has what appears to be Faceball (or whatever the intro screen says) in the middle in Japanese &amp;nbsp; Auto Pause screen, notice the default is OFF, not ON like every other VB game &amp;nbsp; Faceball intro screen &amp;nbsp; Stage select screen, although it shows what stage you are playing at the beginning of a level, I've been told that all stages appear to be the same (with 14 levels each, but all 14 levels are the same no matter what stage you select) &amp;nbsp; Here is a screenshot of the actual game &amp;nbsp; Pic of the in game map &amp;nbsp; Pic of the Game Over screen... seems kinda weak, I want a nice dying animation :-( &amp;nbsp; Here's a pic of the arena select screen &amp;nbsp; Here is a pic of the debug menu, notice the name shoot me, where the rest of the game has shot me, and the spelling of the other enemies aren't totally accurate either. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/proto_vbowl.html</url>
		<content>Virtual Bowling Prototype Here are a bunch of pictures and screenshots of the one of the two first known Prototype carts, Virtual Bowling!!! Many thanks go out to the mysterious VB collector "Mr. G"! I got an email from him with many pics of the carts and a few screenshots. Please do not take the Project:VB logo off the pics and use the pics elsewhere, I tried putting the logo in a place that didn't block too much, but if I start seeing them with the logo cropped out, I'll have to put them where it blocks the pictures :-(. &amp;nbsp; Here is the opened cart of Virtual Bowling. Note the number on it - VUE-(E) BA3A . That is the same number as Faceball, and it has 32k of battery backed SRAM, although neither VBowling nor Faceball use it (I'd assume that they put it there so it could be a universal Proto cart) &amp;nbsp; Here is the back of the proto cart &amp;nbsp; Here is a pic from the other side, showing the dip switches better. &amp;nbsp; Full shot of the back of the Virtual Bowling cart. I'm assuming that says Athena and V Bowling or something similar. &amp;nbsp; Here is a picture of the front of the proto cart (bottom of the board). &amp;nbsp; The debug screen. &amp;nbsp; Notes about this game: In this prototype, when you get a turkey (3 strikes in a row), a turkey runs and splats into the screen and the girl says "Monkey!" </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/scan_np.html</url>
		<content>Nintendo Power ScansI'll get these added back in when I get a chance. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/scan_other.html</url>
		<content>Other Virtual Boy Related ScansI'll get these added back in when I get a chance. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/disp_medium_us.html</url>
		<content>Medium US Store Display Here are a few pics of my recently purchased large display unit. This is the type that was used in stores such as Toys "R" Us. Overall, the display is in good condition, but the light has a few cracks (as seen in the pics), where it looks like someone shot it with a beebee gun. I pulled it apart, and some cracked the first and second piece of glass, and one only cracked the first layer. I still don't know why someone would want to use a large display unit with a nice light on it for target practice, but some people are just stupid. &amp;nbsp; Full shot of display with light off &amp;nbsp; Full shot with light on &amp;nbsp; Full shot of the back &amp;nbsp; Picture of the headset &amp;nbsp; Picture of the light with the light off &amp;nbsp; Picture of the light on &amp;nbsp; Picture of the back of the headset when facing down &amp;nbsp; Sticker of the individual display information </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/disp_small_us.html</url>
		<content>Small US Store Display Here are a few pics of my small display unit. This is the type that was used for demo in Blockbuster stores. Overall, the display is in good condition, but when I received it, it was very dirty and didn't have any side panel paper inserts. I cleaned it up, printed out some side paper inserts, and now it looks pretty close to original. &amp;nbsp; Here is an overhead picture of the small display unit &amp;nbsp; Here is a picture of the small display unit from the front </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/disp_small_jp.html</url>
		<content>Small JP Store Display I'll get pics and info of my small JP store display up when I get a chance. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/cheats.html</url>
		<content>Cheats I'll get the cheats updated when I get a chance. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/endings.html</url>
		<content>Game Endings I'll get the game endings updated when I get a chance. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/wants.html</url>
		<content>Stuff I want for the Virtual Boy Me, like everyone else - Link Cable (See Other Page) Rumble Pack (Or at least a&amp;nbsp;vibrating controller so you don't get cramps from playing too long ;-) ) (See Other Page)An actual Joystick, instead of just a game pad, preferably analog.A Programmable Joystick.A video output to connect to TV or Monitor, or at least to another VB display.Rechargable Battery Pack for when you can't use the AC Adapter, but don't want to waste batteries. (See Other Page)Softer Eyeshade.Shoulder Rest. The revival of the Virtual Boy, I know it will&amp;nbsp; never happen, but hey, everyone can dream. &amp;nbsp; &amp;nbsp; Reasons I know it will never happen- &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 1. How much would they sell it for, some got it for $10 - ME! &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2. If they didn't resell it, it wouldn't go over well. &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 3. If they sold it for too much, it would flop again. &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 4. The Technology is out of date. &amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Release the Source for Virtual Boy Games. Program the link cable. (See Other Page) Find Prototype Games. (See Other Page) Virtual Boy Operating System. Computer Link Cable. (See Other Page) More games made by anyone! (See Other Page) These games (See "Screenshots") Note: These are not real screenshots, just ideas of what games would have been great, and hopefully will be made in the future. Pitfall Asteroids Donkey Kong Mega Man &amp;nbsp;&amp;nbsp; Snake &amp;nbsp;&amp;nbsp; </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/coolstuff.html</url>
		<content>Cool Virtual Boy StuffVirtual Boy ASCII Pics (Based on ones from PlanetVB)&amp;nbsp; &amp;nbsp;Virtual Boy&amp;nbsp; &amp;nbsp;Virtual Boy ControllerGame Title Unscramble (Requires Visual Basic Runtimes)Stuff From World-of-Nintendo.comCreate a CharacterCreate a WeaponCreate an EnemyGame ChallengesGame ChangesGame Instruction Manuals </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/links.html</url>
		<content>Virtual Boy LinksThis page is probably out of date, but there are still some good links here, and there may be some worthwhile information visiting the archived dead links on The Wayback Machine. Emulators CZ - Nintendo Virtual Boy * GameFAQs VB Message Board gamerland.com Video Game Database Virtual Boy games * Nintendo - Virtual Boy NINTENDO LAND Nintendo Virtual Boy Area Nintendo Virtual Boy Resources Nintendo Virtual Boy * PLANETVB - THE #1 VIRTUAL BOY DATABASE * The Unofficial Nintendo Virtual Boy Homepage * VeeBee Development * Video Game Chat - Virtual Boy - Message Board Virtual Boy - Nintendo of Japan Virtual Boy Gamepics Virtual Boy Joystick Virtual Boy Web site. Created by New Vision Media VirtualBoy Zone - Back at it! * Virtual-E The Virtual Boy Emulation Project * Welcome to Virtual Boy Rediscovered * WWW.VIRTUAL-BOY.NET or WWW.VIRTUAL-BOY.ORG Yahoo! Clubs nintendodomain Yahoo! Clubs virtualboydomain Yahoo! Clubs virtualboymuseum * Still updated or definately worth visiting </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/emulation.html</url>
		<content>Virtual Boy EmulationThere has been a lot going on in the world of Virtual Boy emulation lately, so I have decided to add a section with links, screenshots, and information from the different emulators released. I am NOT offering any ROMs on this site and DO NOT email me asking me for them because I will NOT give them out. Any emails requesting ROMs will be immediately deleted. This list is a little out of date, so may or may not reflect the current state of emulation. If anyone has anything they would like to add to the list, please email me. Emulator / ROM Compatibility: Click the link at the top of the table to go to it's homepage. Note: Many of the previously released roms were bad dumps, this table assumes a good ROM dump. X = Completely Runs (may not be playable depending on speed of computer) P = Playable, but requires -fixpal in Reality Boy and brightness hack on in Red Dragon - = Won't boot S = Boots to startup screens G = Runs with glitches ? = Untested Game VB Reality Boy / Red Dragon Virtual-E ViBE Galactic Pinball X X / S X ? Mario's Tennis X G G ? Teleroboxer X X X ? Mario Clash X G G ? Virtual Boy Wario Land X S S ? Virtual Boy Wario Land (Demo) X S S ? Red Alarm (US) X - - ? Red Alarm (Demo) X - - ? Red Alarm (JAP) X - - ? Virtual League Baseball X S S ? Virtual Professional Baseball '95 X S S ? Jack Bros. (US) X - - ? Jack Bros. (JAP) X - - ? Golf (US) X - - ? Golf (JAP) X - - ? Panic Bomber (US) X P - ? Panic Bomber (JAP) X P - ? Vertical Force (US) X S S ? Vertical Force (JAP) X S S ? Waterworld X X - ? Nester's Funky Bowling X S - ? 3-D Tetris X - - ? V Tetris X X S ? Space Squash X X - ? Virtual Fishing X X X ? Insmouse No Yakata X X S ? Space Invaders: Virtual Collection X G G ? Virtual Lab X S S ? SD Gundam Dimension War X S S ? Virtual Bowling X G G ? </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/securitybit.html</url>
		<content>Modify a security bit If you bought a security bit hoping to use it to open the VB up, you've probably noticed that it's unable to reach down in the 4 deep holes. There is a new bit available with a longer neck that may work, but I haven't heard of anyone trying it for sure on a VB yet. If you already have one of the short bits, here's a method of modifying it to work in the deep holes. You can also make the modified flat head screwdriver, which is probably easier to do, but this works better as far as ease of removing and tightening the screws. Here's the screwdriver with the security bit Close-up of the bit Now you're going to use a grinder to grind the bit to a round cylinder about the size of the tip Like this Then put it in a vice and use a dremel to make a notch for a flat head screwdriver Like this Then you can drop the bit into the hole and use a standard flat head screwdriver to loosen and tighten the screws </content>
	</page>
	<page>
		<title>Comcast</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/Dissect.htm</url>
		<content>Comcast Sorry, the page you were looking for could not be found. Suggested Actions Check the URL that you have typed and retry.</content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/erasesram.html</url>
		<content>Erasing Battery Backed SRAM To erase the SRAM (which stores your save games / high scores), you can do a couple things... &amp;nbsp; 1) You can open the cartridge and pull out the battery for a short period of time, then put it back in (which isn't easy since the battery is attached to the board). 2) You can open the cartridge and short out the + and - of the battery for a short period of time. 3) This is the easiest since you don't have to open the cart... stick a very small wire in each pin 54 and pin 60, take a AAA battery (probably doesn't have to be, but that's what I tried it with - but make sure it is low voltage, near 1.5V), and touch the wire in pin 54 to "-" on the battery, and pin 60 to "+" on the battery... but don't hold it there, just touch it really quick (there's a chip on the board that gets hot if you hold it there for more than a couple seconds). &amp;nbsp; Then try the game out, and all the save games / high scores should be cleared... if they aren't, you probably didn't do whichever option you chose long enough or you did it incorrectly. This is great for those of you that bought games used, and have high scores / save games from the last person that owned it, or just want to start over again. I know this can be useful for Galactic Pinball since that game doesn't have a reset high scores option as far as I know... but there may be other games this might be useful for. Of course I wouldn't do this if there's an option to erase a save game inside the game, but if there's no choice, these will work. As always, this has never damaged any of my games, but I haven't tested it extensively, so do this at your own risk, and I'm not responsible if this screws up your game. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/transplant.html</url>
		<content>Transplanting ROMs To swap or replace a ROM in a Virtual Boy cart isn't an easy job, but it can be fairly painless if you are careful. This can be useful if you somehow have a bad ROM that you want to replace, a ROM you'd rather put in a cart instead of the current one (I don't know why you'd have this, but you never know), or just because you're bored ;-) . The reason I did it was because I had a dead Wario Land cart, I dumped the rom then compared it to a working rom, and it showed that the current ROM was bad, so I still had the old ROM from the Teleroboxer that I took out to make my reprogrammable cart, so I decided to try it out... &amp;nbsp; Here's what you start out with... a basic Wario Land cartridge &amp;nbsp; First you have to remove the old chip... I did it by using a chisel and getting under the corner, then using a soldering iron to heat up the pins as you lightly pry the chip off the board with the chisel (BTW, that is actually a picture of getting the Teleroboxer chip off... the art of picture recycling) &amp;nbsp; Then after you get the chip off, you want to place the chip to replace the original one perfectly in line with the connections on the board, then firmly press down with your finger while you take your WELL CLEANED soldering iron and heat and push down each pin and making sure you have a good connection while making sure you don't get any solder shorting any pins out (that is where the well cleaned comes into play most). Just continue all the way around the chip until every pin is connected. Then you should look between every pin and maybe use a pick to go between every pin so you know there are no shorts and no loose pins. &amp;nbsp; Then after you're done with the transplant, you have yourself the other game! As you can see it doesn't look as nice, since the soldering was done by hand, but it works and does the job. &amp;nbsp; Of course, I this worked for me, but I am not responsible if you mess something up while you're trying this, so do it at your own risk. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/romid.html</url>
		<content>Manufacturer ROM IDs Here is a list of all the known manufacturer ID's that appear on the ROMs of the games. Manufacturer ID Nintendo 01 Coconuts 0B Hudson Soft 18 Kemco Japan 28 Ocean 67 Kemco America 7F Bullet-Proof Software 8B I'Max 8F T*HQ 99 J-Wing AH Bandai B2 Taito C0 T&amp;amp;E Soft E4 Athena E7 Atlus EB If anyone has anything they would like to add to the list, please email me. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/cartpinout.html</url>
		<content>Cartridge PinoutTo the best of my knowledge this is a complete cart pinout. This table is originally from David Tucker, and I've just added the recently found pins. *Notes: Pins 55-58 are analog sound pins that the VB goes through between the sound source and the speakers. My guess it that they would have been used in the future for an audio enhancement chip, much like the Super Nintendo used. Pins 10,12,14 are the last 3 addresses that were never used on the VB, but that means that the VB supports up to a 128 mbit chip! That would be a nice multicart! ;-) Pin 4 is /ES which is the expansion area select, which was to be used in the future for addon chips, similar to the SuperFX and other chips used on the SNES. Pin 9 is /INTCRO, which is the interrupt for the expansion area. Pin 5 is /WE. When writing to a memory location, this pin is pulled low (perfect for writing flash in-system) Edge Con Rom Ram--- --- --- 1 (gnd) 3 27 (/WE) 5 /WE 7 26 (CS2) 9 /INTCRO11 2 (A18)13 3 (A17)15 4 (A7) 3 (A7)17 5 (A6) 4 (A6)19 6 (A5) 5 (A5)21 7 (A4) 6 (A4)23 8 (A3) 7 (A3)25 9 (A2) 8 (A2)27 10 (A1) 9 (A1)29 11 (A0) 10 (A0)31 12 (/CE)33 (gnd) 13 (GND)35 14 (/OE) 22 (/OE)37 15 (D0) 11 (D0)39 16 (D8)41 17 (D1) 12 (D1)43 18 (D9)45 19 (D2) 13 (D2)47 20 (D10)49 21 (D3) 15 (D3)51 22 (D11)53 (+5v)55 (Right Analog Audio Source)57 (Right Analog Audio Output)59 (gnd)---------------------------- 2 (gnd) 4 /ES (Expansion Select) 6 20 (/CS1) 8 (+5v)10 (A22)12 (A21)14 44 (A20)16 43 (A19)18 42 (A8) 25 (A8)20 41 (A9) 24 (A9)22 40 (A10) 21 (A10)24 39 (A11) 23 (A11)26 38 (A12) 2 (A12)28 37 (A13) 30 36 (A14)32 35 (A15)34 34 (A16)36 (+5v) 33 (/BYTE)38 31 (D15)40 30 (D7) 19 (D7)42 29 (D14)44 28 (D6) 18 (D6)46 27 (D13)48 26 (D5) 17 (D5)50 25 (D12) 52 24 (D4) 16 (D4)54 (+5v) 23 (Vdd)56 (Left Analog Audio Source)58 (Left Analog Audio Output)60 (gnd) </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/carts/eprom.html</url>
		<content>Reprogrammable EPROM Cartridge Here's a reprogrammable EPROM cartridge that I built from plans by David Tucker - His instructions. It works just like a regular cartridge except you decide what goes on it. I have tried many different games on it, they all seem to work, including my homemade Simon game. &amp;nbsp; Parts List: Perfboard and two 32pin (or more - I got 40 pin because they're easier to find) sockets, and jumpers (optional) &amp;nbsp; Original VB cart, I used Teleroboxer because it is cheap and has battery backed save games &amp;nbsp; Eprom programmer, I used an EPROMER5 from www.ustr.net . But the cable is junk, so buy a real one (wouldn't write anything correctly for me) &amp;nbsp; 32 pin EPROMs (27C801's) and ZIF sockets (optional, but easier than prying out chips) &amp;nbsp; An EPROM UV eraser (mine is a Datarase II) or you can leave the chips in the sun for a long time or make your own &amp;nbsp; And you will also need: A spool of wrapping wire, a soldering iron, and solder - all available at Radio Shack &amp;nbsp; Building Instructions: First, to open up a cartridge you need a tool, either you can buy one that fits the cart, or what I did was take an old flat head screwdriver that was about the width of the hole, then notched out the center wide enough to grab the center of the screw. &amp;nbsp; Then you need to open up the cart (which cart you use is up to you, but I picked Teleroboxer because it has battery backed save games and is fairly cheap) &amp;nbsp; After opening, you need to remove the chip which I did by clamping down the board, taking a chisel to get under the edge of a corner, then use a soldering iron and to melt the solder and pry up with the chisel (the chisel works the best because even a small flat head screwdriver had a hard time getting under the corner of the chip) &amp;nbsp; Then you should test to make sure there are no shorts where you desoldered the chip, and if you have to, use a pick to scratch away some excess solder &amp;nbsp; Then you are going to need some perfboard and IC sockets (at least 32 pin, but I used 40 pin because they're easier to find), then cut it to the approximate shape that you want it. You can put the chips just about any way you can think of, but I put them side by side so it doesn't stick out much in the back, but you can make it as the VB Cart, but about twice as long. I will get to the jumpers in the middle later. Remember, we have not soldered anything yet, those are just sitting in the holes. &amp;nbsp; Then you're going to want to test the fit, make any notches/holes to fit better, and try actually sticking it into the VB (do it now, because it will be harder to modify later) &amp;nbsp; To cut the wires, the fastest way I've found is to decide how long you want the wires, then make a tool to make the wires that length. What I did was found a block of wood the size I wanted, drilled a hole down the middle of it, stuck a screw through it. Then attach it to a drill and it'll quickly make a new spool the length that you want, then just take a knife and cut straight across and all the wires are relatively the same size. &amp;nbsp; You need to then read this file to find out which wires go where &amp;nbsp; Next, you want to put the socket in the holes, and slide the wires that are duplicate with the other side in each hole (saves running two wires to the cart edge which is very crowded), then run them to the other side and put them in the same holes. Then you will want to solder them in (you may want to solder the extra pins in first if you got a 40 pin socket so it stays in place when you move it around) &amp;nbsp; This is after soldering in the duplicate wires to the front &amp;nbsp; Then you will need to solder the wires to the back of the board. The jumpers are so you can use a flash EPROM chip instead of standard UV erasable EPROM. &amp;nbsp; Next, you need to solder the wires from the EPROM board to the VB Cart board. The best way I found to do this was to clamp the EPROM board, and clamp a 2x4 to the bench and use it to support the VB Cart board while you solder all the wires (be careful, they are very small and brittle) &amp;nbsp; Then after you get the wiers connected, carefully put the the two boards into the cart case &amp;nbsp; Then you're ready to put the ZIF sockets in, program the chips, put them in, and PLAY GAMES! &amp;nbsp; Here it is from the top, as you can see, it doesn't stick out too far in the back, and doesn't cause as much bend in the cart &amp;nbsp; Programming: To program, you must first make sure the chips are blank (mine take about 15mins in the eraser), then select the chip type and rom you want to program. Because we have to use two chips, you must program the High and Low Bytes separately. You can do it in this program, but there are many bugs in it that it is better to split the file first, then program the whole file. You must also fill the whole chip up with repeats of the data. After you select the rom, you can put the chip in and select Blank Chk to make sure it is completly erased. Then you can select program. It will take about two minutes to program a full 1MB chip, then you should verify it. After the first chip is done, you can put the second chip in and do the same process with the other half of the file. Then put the chips into the cart and you're done! &amp;nbsp; My first screenshot from my EPROM - Teleroboxer &amp;nbsp; Screenshot of my homebrewn game Simon </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/carts/flash.html</url>
		<content>Reprogrammable Flash Cartridge Here is my reprogrammable Flash cart, which is based on my EPROM cart, except as you can tell, it is a lot smaller, and to reprogram, the chips are erased inside the device that programs them, so it is a much faster and easier process. Although this cart could have been just as big as my EPROM one, the flash chips I bought are PLCC, which is a lot smaller, but has the same capabilities as the DIP. The biggest problem with using flash chips is that the largest 32 pin flash chip is a 4 megabit chip, so when using 2 of them, you get a 1 megabyte cart, which is fine for most games, but there are some 2 megabyte games out there (although they are fairly common games). &amp;nbsp; Parts List: You need - Perfboard, two 32pin PLCC sockets, wrapping wire, and an original VB cart (I used teleroboxer) &amp;nbsp; EPROM programmer, I used the Willem EPROM programmer because it supported my chips and more devices and is probably the cheapest one available although slower than my EPROMER. You will also need a PLCC adapter to program these chips. Both are available from www.willem.org. &amp;nbsp; 32 pin PLCC chip (mine are 90ns ST M29F040B - 4mbit chips) And you will also need: a soldering iron, and solder - available at Radio Shack &amp;nbsp; Building Instructions: First, to open up a cartridge you need a tool, either you can buy one that fits the cart, or what I did was take an old flat head screwdriver that was about the width of the hole, then notched out the center wide enough to grab the center of the screw. &amp;nbsp; Then you need to open up the cart (which cart you use is up to you, but I picked Teleroboxer because it has battery backed save games and is fairly cheap) &amp;nbsp; After opening, you need to remove the chip which I did by clamping down the board, taking a chisel to get under the edge of a corner, then use a soldering iron and to melt the solder and pry up with the chisel (the chisel works the best because even a small flat head screwdriver had a hard time getting under the corner of the chip) &amp;nbsp; Then you should test to make sure there are no shorts where you desoldered the chip, and if you have to, use a pick to scratch away some excess solder &amp;nbsp; Through Hole Cart: Then you are going to need some perfboard and cut it to fit the cart, then cut the cart casing so the chip socket fits out the bottom - I used a dremel to cut the holes, and also to thin the casing so I have more room for the wires with less pressure on them and less bulge in the casing. Then start jumpering the wires that are in common with both chips (VCC, address lines, GND, /WE, etc) &amp;nbsp; To cut the wires, the fastest way I've found is to decide how long you want the wires, then make a tool to make the wires that length. What I did was found a block of wood the size I wanted, drilled a hole down the middle of it, stuck a screw through it. Then attach it to a drill and it'll quickly make a new spool the length that you want, then just take a knife and cut straight across and all the wires are relatively the same size. &amp;nbsp; You need to then read this file to find out which wires go where, and this file for the pinout of the throughhole PLCC socket. &amp;nbsp; Then you have to solder the wires to each pin individually and connect them to the correct pins. Although that looks like a huge mess, as long as you work on it one pin at a time, it isn't really too difficult, just time consuming. &amp;nbsp; Then after you get the wiers connected, carefully put the the two boards into the cart case and screw it together - this is what it looks like. &amp;nbsp; Here's a pic from the front. Now you're ready to program the chips, put them in, and PLAY GAMES! &amp;nbsp; Here it is from the bottom. As you can see, it is a lot smaller than the eprom cart and looks very nice having no wires exposed. Surface Mount Cart: Here's just a few pics of my latest flash cart which uses surface mount sockets, which are a lot lower profile and don't stick out the back any. The wiring of the cart is the same as the through hole, but there's just a few differences that I'll note under the pictures. &amp;nbsp; First, you want to start by cutting holes the size of the sockets starting from the back wall of the plastic cart (I used a small drill like bit for the dremel to cut the big part, then used an xacto knife to finish the edges). Then you will want to give yourself some extra room inside the cart, so you should trim away some of the inside of the cart (I used a dremel). &amp;nbsp; Here you see the wiring of the chip... same as the other cart, except instead of having large through holes, you have smaller surface mount pins (which aren't really THAT hard to solder to). Also notice that I ran every wire to the edge instead of connecting from chip to chip, then from one chip to the edge. That was because with the surface mount chips, there is a lot less room for wires by the chip, so it works out better to run each individually to the edge. &amp;nbsp; And the finished product, a completely flush socketed flash cart. The other version does have it's advantages though... although it doesn't look as nice, it's easier to swap chips because you can leave the cart in and only remove the chip, where this version you have to pull the cart out slightly to remove the chip. But it may be possible to move the hole back as far as possible and have access to the chip. WOOHOO! Now I can do some quick programming for the link cable with TWO flash carts! &amp;nbsp; Programming: To program, you must first make sure the chips are blank (click erase to be sure, takes about 7 seconds), then select the chip type and rom you want to program. Because we have to use two chips, you must program the High and Low Bytes separately. I believe that you can do it in this program, but I always split the file first, then program the whole file. You must also fill the whole chip up with repeats of the data. After you select the rom, you can put the chip in. Then you can select program chip. It will take about 5 minutes to program a full 512k chip. After the first chip is done, you can put the second chip in and do the same process with the other half of the file. Then put the chips into the cart and you're done! </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/carts/plccpcb.html</url>
		<content>Reprogrammable&amp;nbsp;PLCC Flash PCB Cartridge Here's some pics of a PLCC cart PCB that I designed... I created it using Novarm Diptrace, then sent the design to Custom PCB. Their prices are very reasonable since their basic service doesn't include any add-ons. Next time I'll probably have a solder mask applied, but I couldn't see spending the extra money for it on something I wasn't sure was going to work. I added the H shaped area for an inverter to allow writing in-system from the upper address line, but now I realize pin 5 is /WE, so the next one will have that line connected directly and those other pads removed. The board is a direct connection for PLCC 29F040's (4mbit flash), but can also support chips such as a PLCC 27C080's (8mbit EPROM) by swapping/jumpering 2 pins. These are currently not for sale, but I should have at least a few for sale sometime in the future. Here's the front of the cart PCB. Here's the back of the cart PCB. Front of the built cart. Sockets installled on this cart with the /WE pins connected to VCC (writing disabled from the cart edge). I have also built one with the chips directly soldered to the board and /WE connected to pin 5, which allows programming directly by the Virtual Boy, and completely enclosed in the cart case. Back of the built cart. Kinda crappy cutting job on the case, but it works :-). </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/carts/nineprom.html</url>
		<content>Official Nintendo EPROM Cartridge Here's an official reprogrammable EPROM cartridge from Nintendo. These are the carts that were used during development of games, and maybe even used to test some unreleased prototypes :-). I'll have to dump the SRAM on it some day to look for saved data. I've been using this myself for testing of games over 8mbit, since this cart is much less fragile than the EPROM cart that I built. I still prefer the flash cart over this though. &amp;nbsp; Front of EPROM cart. &amp;nbsp; Back of EPROM cart. &amp;nbsp; Specs: Cart takes either 4 or 8 mbit EPROMs, and has 256kbit of SRAM. The standard cart only has 64kbit, so I assume this was used to prepare for future games that needed the extra SRAM. 4 dip switches are installed. These select which EPROM size is used, and whether the SRAM is enabled or disabled. DIPs are on when switch is up. DIP 1 connects to pin 1 on the EPROM from the top pin, and pin 16 of the edge from the bottom pin. DIP 2 connects to the top pin of DIP 1 from the top pin, and an unused header for capacitor C7 (DIP is useless). DIP 3 connects to pin 20 on the SRAM from the top pin, and pin 6 of the edge from the bottom pin. This pin is also pulled up with a 10kohm resistor. DIP 4 is not connected on either pin (DIP is useless). DIP 1 DIP 2 DIP 3 DIP 4 4mbit EPROMs w/ no SRAM OFF Don't Care OFF Don't Care 4mbit EPROMs w/ SRAM OFF Don't Care ON Don't Care 8mbit EPROMs w/ no SRAM ON Don't Care OFF Don't Care 8mbit EPROMs w/ SRAM ON Don't Care ON Don't Care </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/sramrw.html</url>
		<content>Reading / Writing SRAM Here's a little how-to for converting a GB memory reader / writer to VB. Although this should work for all GB memory readers, I have only tested it with the Blaze MPXchanger. I got it for $10 at Electronics Boutique, and they had a lot of them that they were closing out, so you should go pick one up soon before they're all sold out! You should also know that the software doesn't support Windows 2000, and I couldn't find a new version that does support Windows 2000, so make sure you have access to a Win 9x computer (I haven't tested it in Windows XP with the compatibility mode, so it may work with that, or possibly in a Win 9x emulator (Wine, Virtual PC, etc.) &amp;nbsp; The cart read/writer, no modifications are done to this, so you can still use it for all the other uses too! &amp;nbsp; Then you need a gameboy cart with SRAM. I used Final Fantasy Legend II. You want to use an old game, not a new one (like the GB Color enhanced ones) with SRAM because the newer ones have 256kbit SRAM, and to make it easier, you should get one with 64kbit SRAM (like the VB has). I know for sure that Final Fantasy Legend II and Legend of Zelda Link's Awakening have 64kbit sram, but the Legend of Zelda Link's Awakening DX (GBC enhanced) has 256kbit. &amp;nbsp; Then you will need to remove the existing SRAM chip on the GB cart, get a 28 pin DIP socket, and solder wires to the GB edge pins (or directly to the SRAM pins if you want to make it harder on yourself ;-) ) You need to solder wires to every pin on the edge except: 2,5,19,20,21,30,31. Then you need to solder one wire to pin 20 on the SRAM connector. Make sure when soldering to the GB edge connector pins that you solder only to the very top of the pin, and don't get solder globs down lower on the pins because that is the connector for the cart too. Also note, you can not remove the ROM from the cart, if you do that, the MPXchanger won't recognize that there is a GB cart in it (although other read/writers may allow it, it doesn't hurt anything being there). &amp;nbsp; Then you need to cut a hole in the end of the case so the wires can stick out, and trim down the plastic piece that goes over the GB connector to accomadate for the wires being soldered there so the case doesn't bulge (but don't cut too much or the board might become kind of loose in the case). &amp;nbsp; Then you need to connect all the wires from the board to the socket as shown in this file. &amp;nbsp; Then you should stick it all in the case and see how it fits. &amp;nbsp; Then I drilled a hole in the board and stuck a screw into it so it would at least hold it in fairly well so there wouldn't be stress on the wires. &amp;nbsp; And here's the finished adapter w/ the sticker peeled off. &amp;nbsp; Here it is all connected through the dumper (which needs to be slightly modified (as shown in this file) to work for SRAM). &amp;nbsp; Then you run the software, click GB, then left arrow reads the cart, right arrow writes the cart. The format it saves it in is it's own header for the first 192 bytes, then the actual SRAM dump starts at address 0xC0. I have sent an SRAM dump from Reality Boy and it worked with no problems on the actual VB. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/sramdumps.html</url>
		<content>SRAM DumpsThese are just a few dumps that I have taken of my games. Feel free to download these and experiment with them (or use them in Reality Boy), and if you figure out what does what when you edit it, let me know, and I'll put anything I figure out up here too! I haven't gotten around to dumping these yet, but this is where they'll be when I get to it. 3D Tetris - Galactic Pinball - Teleroboxer - Virtual Fishing - Wario Land - SD Gundam Dimension War - </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/tech/programming.html</url>
		<content>Programming the Virtual BoyThis will have more information about programming the VB, but for now, this is it. Here are all my Games / Apps that are worthy of releasing as of 4/19/03. They are all compiled with gccVB, which at this time hasn't been publicly released, so just use this as a reference for when it is released, or if you're lucky enough to have it, have fun! You might have to change the path of the libgccvb.h if you don't have it in that place, and I have included my libgccvb.h in all the zips, so feel free to take anything you don't have and put it in your own. Hopefully the released version of gccVB will have all these functions in it and you will just need to include the needed files, but for now it's easier for me to give you the whole header. You should note, a lot of this stuff doesn't run on the current release of emulators, but the next one should fix a lot of it, except that 2 of the games use the link port, so until linking is added to the emus, you can just use that as a reference of how to program it, unless you have 2 programmable carts and a link cable :-P. These are all freeware and do what you like with them, but if you enjoy the games or find the knowledge useful and continue to use it, please support me by sending me Bound High or Dragon Hopper (or any proto) :-D. Apps / Games: Etch-A-Sketch (Drawing app using the framebuffers with refreshing disabled) Framebuffer Drawing demo (Draws straight lines in the shape of the word "Hi", then you can move the lines) Simon (Repeat the button-pressing pattern game) TicTacToe (2 Player TicTacToe using the link cable) Tron (2 Player Snake using the link cable and reading / writing the framebuffers with refreshing disabled) </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/mods/controllers/usb.html</url>
		<content>USB Virtual Boy Controller Here's a how-to for creating a USB VB controller using the kit from www.retrousb.com. This is a really cool and cheap way to use a real VB controller for development and emulation (the keyboard just doesn't work well for the VB controller). This is a great alternative to making a parallel port connection w/ SNESKey. Here's everything you need... controller and interface board. Then you need to take the back off... just a few phillips screws. Then you'll want to cut the cable and remove the sheathing, but don't cut it too short yet. Here's a diagram of where to connect the wires. Here's the USB wires connected to the interface board. Here is the board wired to both the USB cable and the VB controller cables. Notice the red wire (from the battery) is not needed, so it can be cut short. Here is the interface board installed in the controller. Putting the cable between the original cable clip seems to work well and holds it securely. Next, because there is now a new board in the controller, we need to make some room. You'll want to snap off the angled plastic pieces on the back of the controller. I used a pair of needlenose pliers, but you can use anything that will either cut or break them off. Make sure the back will go on and replace the screws that you removed earlier. And here's the final product :-). When you plug it in, it'll be detected as a joystick. Go into the joystick test and ensure everything works properly. Now... it's great that it's detected as a joystick, too bad the VB emulators don't currently support joysticks. So, to convert the joystick inputs to keyboard inputs, I use JoyToKey. You can download the software HERE. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/mods/controllers/dual.html</url>
		<content>Virtual Boy Controller Dual Output Adapter This is a controller modification that allows you to control multiple VB's with one controller. You can't just split all the wires because each system requires control of it's own chip. It is pretty useless, because games that have any sort of randomness to them won't play the same on each VB, and games that are VERY timing sensitive don't work because there is a slight difference in the speed in either the VB or the chip, or both. But, I made it just as an experiment, and I figured I'd share it. It could be nice if you put a switch on the data line so you could run two VB's off one controller/power supply, then switch between the two systems, like for testing a 2 player game, or for playing two games simultaneously. &amp;nbsp; First you start by opening the donor controller up. &amp;nbsp; Then you have to remove the chip. &amp;nbsp; Then you will set it on top of the other chip, and solder all the wires from the top chip down to the lower chip except for pin #'s 1, 17, and 18.. For a pinout of what pins do what, look at this file. &amp;nbsp; Then you should add 100 ohm resistors to the 3 wires that are connecting to the chips (I'm not sure if these are necessary, they were on the original board, so to be safe, these should probably be added). &amp;nbsp; Then solder the orange wire (clock) to pin 17, the brown wire (reset/latch) to pin 18, and the yellow wire (data) to pin 1, then the rest of the wires to their corresponding pins, and put it back together. You can fit both wires out the normal hole out of the controller casing. Then test it, and you should have control of both systems by using only one controller. Note: I don't know that all 3 of those pins are needed to be separated for the other controller, it may be possible that only one or two of them need to be. </content>
	</page>
	<page>
		<title>Project: Virtual Boy</title>
		<url>http://home.comcast.net/~virtual.boy/projectvb/mods/controllers/ninadapt.html</url>
		<content>NES / SNES Controller Adapter Here's the start of a how-to for making an adapter so you can use NES and SNES controllers on the VB. I have pictures of the process, but I'm unable to find them right now, so when I do, I'll finish this. </content>
	</page>
</site>
